using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libcimgui"], :libcimgui),
    LibraryProduct(prefix, ["libcimgui_helper"], :libcimgui_helper),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/CImGuiBuilder/releases/download/v1.72.0-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/CImGui.v1.71.0.aarch64-linux-gnu.tar.gz", "304dd4a87ce567915d0a68ef79dc9ac07d4cf9e8266b31b8d52a5fe94bb9bcf3"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/CImGui.v1.71.0.aarch64-linux-musl.tar.gz", "ed69fa33485f74e38504802abe4ebe21c3e4bd2e5b6442e04111b0e4c34aabc1"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.71.0.arm-linux-gnueabihf.tar.gz", "e667a57ffa4a497f43bc6c738d6363417fde10eaff7c373ab09a932e880ddcd7"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.71.0.arm-linux-musleabihf.tar.gz", "0be0725428621c216be4a0327efaa59b59cbeebde64211cf3057860506a43a8d"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/CImGui.v1.71.0.i686-linux-gnu.tar.gz", "4de168bd4f57bca90f335830bfc7f8d394b8ddcfe7685106ec2df7c2b39a2962"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/CImGui.v1.71.0.i686-linux-musl.tar.gz", "1feef579194ab1ac0b04a291595915594dabf5296ea87445b2fc3c45a1c413fe"),
    Windows(:i686) => ("$bin_prefix/CImGui.v1.71.0.i686-w64-mingw32.tar.gz", "aff6e5287c74d9a4a76a528ee7af8fb14a02a8eca63ec922c896fef5d16857e9"),
    MacOS(:x86_64) => ("$bin_prefix/CImGui.v1.71.0.x86_64-apple-darwin14.tar.gz", "4367ebc9ecb541390a43b2d4ef3ace6ab729e66bb71cb5b7b88f19f9ca2c2334"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/CImGui.v1.71.0.x86_64-linux-gnu.tar.gz", "ebf14dd30b1dab1bc905fc9ade20e07dbb3e1823bfa3f832dec27e305b729c98"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/CImGui.v1.71.0.x86_64-linux-musl.tar.gz", "162a844c28100ada3ba089ed89e19f363009caf248dbf54ef4c48bdf209eeb1e"),
    FreeBSD(:x86_64) => ("$bin_prefix/CImGui.v1.71.0.x86_64-unknown-freebsd11.1.tar.gz", "be4452205269692d9f81c301f6f0ef90347600469d64b04e1106c2bf963e92f4"),
    Windows(:x86_64) => ("$bin_prefix/CImGui.v1.71.0.x86_64-w64-mingw32.tar.gz", "4c3100538b2ea0cc76c878648eca0fd6a794251a4bddbdae2dc2d68117e5767e"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
