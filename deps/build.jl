using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libcimgui"], :libcimgui),
    LibraryProduct(prefix, ["libcimgui_helper"], :libcimgui_helper),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/Gnimuc/CImGuiBuilder/releases/download/v1.69.0-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/CImGui.v1.69.0.aarch64-linux-gnu.tar.gz", "d592e865709b828a4eb3eb74447c240598cd3147c46e336ee42520ea76dcacd2"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/CImGui.v1.69.0.aarch64-linux-musl.tar.gz", "cc813341e40ac9f81a508ea9611bf66643dca11fcceba2c7c55d4e1b4d7ccd01"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.69.0.arm-linux-gnueabihf.tar.gz", "fb547f6e3cdc1349dadc41819e0c479633628b1195ef58381d50cdbcf1307f43"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/CImGui.v1.69.0.arm-linux-musleabihf.tar.gz", "9c5a94c5d87843a5e4ff537eaee1cb45d0cd790daa95dd04f5d421be54714553"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/CImGui.v1.69.0.i686-linux-gnu.tar.gz", "34435b38b99b40776d2ed42258baa79d98fff887273101f72d573689596ffd5e"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/CImGui.v1.69.0.i686-linux-musl.tar.gz", "9eba9b253733ce330571630b74494f60c70ddbe48b5e66ac10c70873486d8079"),
    Windows(:i686) => ("$bin_prefix/CImGui.v1.69.0.i686-w64-mingw32.tar.gz", "8b8dce400edbc87463fccfcc73c1c440589071e4610018c182024700dc35cdf8"),
    MacOS(:x86_64) => ("$bin_prefix/CImGui.v1.69.0.x86_64-apple-darwin14.tar.gz", "78d48ff4ebfca1aef487f5d0b45135096fc37885b78d9b6d10f0fb481a417bb9"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/CImGui.v1.69.0.x86_64-linux-gnu.tar.gz", "749494af8c3602e7247bf2875ca9525cea74511d15aea80dcc8538d384e55c8f"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/CImGui.v1.69.0.x86_64-linux-musl.tar.gz", "7670a24f758fa0cf258c9e27535eb9996f81428947f3f00922675b436de6938a"),
    FreeBSD(:x86_64) => ("$bin_prefix/CImGui.v1.69.0.x86_64-unknown-freebsd11.1.tar.gz", "c3bf887b47d0113481d899906b79f42bd2d5f53cb5dec918b6e5fcf5b6ea182a"),
    Windows(:x86_64) => ("$bin_prefix/CImGui.v1.69.0.x86_64-w64-mingw32.tar.gz", "efd3302834116a5ddb8984eebd7f8ce829bfff17b4b9eaebbdad0432cb7060bd"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
